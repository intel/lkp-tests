pkgname=kernel-selftests
pkgver=git
pkgrel=1
arch=('x86_64' 'aarch64')
url="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git"
license=('GPL')
source=('https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' 'https://git.kernel.org/pub/scm/devel/pahole/pahole.git' 'https://git.kernel.org/pub/scm/network/iproute2/iproute2-next.git' 'https://github.com/nhorman/dropwatch.git')
md5sums=('SKIP' 'SKIP' 'SKIP' 'SKIP')

# Download kernel from git.kernel.org.
# If the kernel has been download into the computer, you can copy it to ${srcdir}.
# As far as possible, please keep the version of source code same with the installed kernel.
# If you want test a specfied version, you can download the code first, build and install it,
# then restart the machine using the new kernel. Lastly, you can start to test it.

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/tests/pkgbuild.sh

get_kernel_version()
{
	# format: X.Y.Z-...
	local version=$(uname -r)
	# format: X.Y.Z
	local a=${version%%-*}
	# format: X.Y
	local b=${a%.*}
	echo "v$b"
}

build_tools()
{
	cd "${srcdir}/linux"
	if [[ -d .git ]]; then
		local installed_version="$(get_kernel_version)"
		git tag | grep -x "${installed_version}" || die "can not bring the download kernel version into correspondence with the installed kernel"
		echo "switch to version $installed_version ..."
		git checkout -b "test-${installed_version}" "$installed_version"
	else
		echo "please make sure the version of current kernel is $installed_version"
	fi

	make allyesconfig
	make prepare
	# build cpupower
	cd tools/power/cpupower
	make
}

install_selftests()
{
	cd "${srcdir}/linux"
	local header_dir="/tmp/linux-headers"

	mkdir -p "${header_dir}"
	make headers_install INSTALL_HDR_PATH="${header_dir}"

	mkdir -p "${benchmark_path}/usr/include"
	cp -af "${header_dir}/include/"* "${benchmark_path}/usr/include"

	mkdir -p "${benchmark_path}/tools/include/uapi/asm"
	cp -af "${header_dir}/include/asm/"* "${benchmark_path}/tools/include/uapi/asm"

	mkdir -p "${benchmark_path}/tools/testing/selftests"
	cp -af tools/testing/selftests/* "${benchmark_path}/tools/testing/selftests"

	for d in arch/x86 scripts kernel/bpf samples Makefile tools include lib
	do
		mkdir -p $(dirname ${benchmark_path}/$d)
		cp -af $d $(dirname ${benchmark_path}/$d)
	done
}

build()
{
	benchmark_path="${pkgdir}/lkp/benchmarks/${pkgname}"
	mkdir -p "${benchmark_path}"
	build_iproute2 || return
	build_tools || return
	build_pahole || return
	build_dropwatch || return
	install_selftests
}

package()
{
	# for hid group
	pip3_install pytest-tap

	# When using pip to install packages system-wide, they are usually installed
	# in /usr/local/lib/python3.x/dist-packages or site-packages
	cp_to_pkg /usr/local/lib

	# install cpupower command and library
	cd "${srcdir}/linux/tools/power/cpupower"
	DESTDIR="$pkgdir" make install
}
