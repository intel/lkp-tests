pkgname=ocfs2test
pkgver=git
pkgrel=1
url='https://oss.oracle.com/projects/ocfs2-test'
arch=('i386' 'x86_64' 'aarch64')
license=('GPL')
source=("$pkgname"::'https://oss.oracle.com/git/ocfs2-test.git'
	'http://kr.archive.ubuntu.com/ubuntu/pool/main/g/glibc/libc6-dev_2.23-0ubuntu3_amd64.deb'
	'http://downloads.openfabrics.org/downloads/mpi-selector/mpi-selector-1.0.3.tar.gz'
	'https://oss.oracle.com/git/jlbec/reflink.git'
	'timing-0.0.1.tar.gz')
md5sums=('SKIP' '0437b586145b9179837377a979c78364' '33afc8610e3e68fc2575987a751f3f2e' 'SKIP' 'SKIP')

. $LKP_SRC/lib/install.sh
. $LKP_SRC/lib/tests/pkgbuild.sh

prepare()
{
	prepare_benchmark_path
}

build()
{
	export PATH=/usr/lib64/openmpi/bin:$PATH

	build_mpi_selector
	build_reflink
	build_ocfs2test
}

build_mpi_selector()
{
	cd_src_pkg_dir mpi-selector-1.0.3

	./configure 2>&1
	make install 2>&1
}

build_reflink()
{
	cd_src_pkg_dir reflink

	./configure 2>&1
	make install 2>&1
}

build_ocfs2test()
{
	cd_src_pkg_dir

	./autogen.sh prefix=/ 2>&1

	[ "$DISTRO" = "debian" -o "$DISTRO" = "ubuntu" ] && {
		# include libc6-dev_2.23's header
		mkdir extract
		# FIXME: use source code instead so that non-debian distro can work well
		dpkg -X ../libc6-dev_2.23-0ubuntu3_amd64.deb extract
		sed -i -e '/^CFLAGS =/a\CFLAGS += -I..\/..\/extract\/usr\/include\/x86_64-linux-gnu -I..\/..\/extract\/usr\/include' programs/xattr_tests/Makefile
		sed -i -e '/^CFLAGS =/a\CFLAGS += -I..\/..\/extract\/usr\/include\/x86_64-linux-gnu -I..\/..\/extract\/usr\/include' programs/directio_test/Makefile
		sed -i -e '/^CFLAGS =/a\CFLAGS += -I..\/..\/extract\/usr\/include\/x86_64-linux-gnu -I..\/..\/extract\/usr\/include' programs/discontig_bg_test/Makefile
		sed -i -e '/^INCLUDES =/a\INCLUDES += -I..\/..\/extract\/usr\/include\/x86_64-linux-gnu -I..\/..\/extract\/usr\/include' programs/reflink_tests/Makefile
	}

	make 2>&1
}

package()
{
	pack_contents $srcdir/timing-0.0.1.tar.gz $benchmark_path

	cd_src_pkg_dir
	make install DESTDIR=$benchmark_path/ocfs2 2>&1

	pack_contents /usr/local/bin/reflink $benchmark_path
}
