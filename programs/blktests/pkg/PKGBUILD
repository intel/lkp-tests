pkgname=blktests
pkgver=git
pkgrel=1
arch=('i386' 'x86_64' 'aarch64')
url="https://github.com/osandov/blktests"
license=('GPL')
source=("https://github.com/osandov/blktests.git" "https://github.com/karelzak/util-linux.git")
md5sums=('SKIP' 'SKIP')

. $LKP_SRC/lib/install.sh
. $LKP_SRC/lib/tests/pkgbuild.sh

prepare()
{
	prepare_benchmark_path
}

build_util_linux()
{
	cd_src_pkg_dir util-linux
	./autogen.sh
	./configure
	make
}

build_blktests()
{
	cd_src_pkg_dir blktests
	make
}

build()
{
	build_util_linux
	build_blktests
}

package()
{
	pack_src_pkg_contents
	pack_contents "$srcdir/util-linux" "$benchmark_path"

	generate_new_tests

	split_tests
}

generate_new_tests()
{
	for tests in $(get_pkg_dir ${pkgname})/addon/tests/*
	do
		cat $tests | grep -v '^#' > $benchmark_path/tests/$(basename $tests)
	done

	# generate the new add subcase automatically after every upgrade xfstests
	cd $benchmark_path/tests

	find -mindepth 1 -maxdepth 1 -type d | while read type;
	do
		type=$(basename $type)
		$LKP_SRC/tools/generate-tests $type
	done
}

split_tests()
{
	cd $benchmark_path/tests

	split_standalone_tests

	find -mindepth 1 -maxdepth 1 -type d | while read type;
	do
		type=$(basename $type)
		$LKP_SRC/tools/split-tests $type-all 20 $type-group-
	done
}

# Some special tests need to be separated and tested separately
split_standalone_tests()
{
	for file in $(get_pkg_dir blktests)/addon/tests/*-standalone
	do
		fields=(`basename $file | tr '-' ' '`)
		fs=${fields[0]}

		tests=$(cat $file)
		for test in ${tests[@]}
		do
			echo $test >> ./$fs-$test
		done
	done
}
